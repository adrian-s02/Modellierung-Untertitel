0:00:01.750,0:00:09.890
This task is about the mathematical and graphical
representation of Petri Nets. More specifically,

0:00:09.890,0:00:20.680
in this task, it's our task to represent this
given Petri Net in the mathematical notation

0:00:20.680,0:00:25.420
as its graphical representation.

0:00:25.420,0:00:36.840
And we have been given the five tuple of the
Petri Net which includes places and transitions.

0:00:36.840,0:00:46.951
In this case, there are four places labeled
s1 to s4 and five transitions labeled t1 to

0:00:46.951,0:00:51.200
t5.

0:00:51.200,0:01:01.030
There are the definitions for the transitions
or more specific for the edges, which lead

0:01:01.030,0:01:08.370
from places to transitions, and from transitions
to places.

0:01:08.370,0:01:13.759
There are markings defined as well.

0:01:13.759,0:01:22.880
We start by placing these places and these
transitions and then we can think about how

0:01:22.880,0:01:28.259
to represent the Petri Net.

0:01:28.259,0:01:38.180
I've already got these transitions and these
places, and now, we require to add edges between

0:01:38.180,0:01:45.649
the transitions and places between.

0:01:45.649,0:01:55.640
Before we do that, we can think also about
how we want to lay out our graph.

0:01:55.640,0:02:04.920
And therefore, before we start on this, we
can check where are transitions or where are

0:02:04.920,0:02:07.149
edges going from and to?

0:02:07.149,0:02:12.890
And when we look at these definitions here,
we find the information that is required for

0:02:12.890,0:02:15.040
our Petri Net here.

0:02:15.040,0:02:29.569
And we see that in this case, there is an
edge between

0:02:29.569,0:02:38.660
the transition t1 on place s1, and we see
that this transition is going to s2.

0:02:38.660,0:02:48.840
We can think of t1 being in the middle of
s1 and s2 somewhere.

0:02:48.840,0:03:01.341
The next definition is for t2 already, so
we can check and t2 is having s2 and

0:03:01.341,0:03:09.519
s3 as neighboring edges or we could place
t2 somewhere in between those two and then

0:03:09.519,0:03:20.480
we have a t3 and this one is between s3 and
s1.

0:03:20.480,0:03:29.660
We could place t3 somewhere between them,
let's say here.

0:03:29.660,0:03:35.340
We have t4 which is between s1 and s4.

0:03:35.340,0:03:44.320
And as there is t2 in the middle at the moment,
maybe we want to place s4 at a different place.

0:03:44.320,0:03:51.130
So, we have for t4, we have s1 and s4.

0:03:51.130,0:04:08.739
So maybe place this somewhere
here maybe.

0:04:08.739,0:04:24.479
And now we require t4 to be between s1 and
s4 and we have t5 left and this one is connected

0:04:24.479,0:04:31.009
to s3 and s4.

0:04:31.009,0:04:37.750
That is why we should place t5 probably somewhere
here.

0:04:37.750,0:04:46.979
And now we have just a basic layout so that
we maybe do not have as much overlappings

0:04:46.979,0:04:50.460
or do not expect very many overlappings.

0:04:50.460,0:04:55.580
So now we can start drawing edges between
those.

0:04:55.580,0:05:05.039
And we start by placing s1 here for transition
one, so we go for all the transitions.

0:05:05.039,0:05:11.870
And this is an ingoing edge to transition
one.

0:05:11.870,0:05:24.000
That is why we have an arrow between s1 and
t1 going from s1 to t1.

0:05:24.000,0:05:30.130
And then there's the outgoing edge from t1
to s2.

0:05:30.130,0:05:54.919
And so we continue from s2 to t2, from t2
to s3, from s3 to t3, from t3 to s1.

0:05:54.919,0:06:13.870
And we scroll down, there we have s1 to t4,
t4 to s4, s3 to t5 and s4 to t5.

0:06:13.870,0:06:25.550
And maybe we move this layer here off s4,
so that it's more visible we move it inside, to get

0:06:25.550,0:06:29.789
a more dense graph, it doesn't matter really.

0:06:29.789,0:06:37.210
Just that we can see the labels all because
it was hidden behind an arrow at the moment.

0:06:37.210,0:06:39.860
Now it looks a bit better.

0:06:39.860,0:06:49.650
And now we have all the edges, but I did not
calculate the numbers yet.

0:06:49.650,0:06:54.930
And for once, we do not have to write numbers
at the edges.

0:06:54.930,0:07:01.590
But if the transition contains more than one,
then we have to add a number.

0:07:01.590,0:07:10.830
And we do not require those numbers because
by default, the weight of the edge is one.

0:07:10.830,0:07:20.750
And if there is no edge, for instance between
s1 and t2 there is no edge, this means that

0:07:20.750,0:07:26.720
the weight of this connection is zero.

0:07:26.720,0:07:36.020
That is why we have the weight of one if there
is an arrow.

0:07:36.020,0:07:41.350
But for our representation here, we have
sometimes two or so.

0:07:41.350,0:07:47.419
And this is for instance from the outgoing
edge of t3 to s1.

0:07:47.419,0:07:56.470
And in this case, we should add the weight
of two to this edge here.

0:07:56.470,0:08:06.860
And then there is also a weight of two for
the ingoing edge to t5 from s4.

0:08:06.860,0:08:13.940
So this is this edge here and we should add
weight of two here as well.

0:08:13.940,0:08:21.950
So, now we considered all the weights, but
we are still not done with the graph as we

0:08:21.950,0:08:26.330
require our initial marking.

0:08:26.330,0:08:37.440
And we get this defined here that for s1 and
for s4, there should be one token and for

0:08:37.440,0:08:41.340
s2 and s3, there should be zero tokens.

0:08:41.340,0:08:50.529
There are no tokens at all at the moment,
so we just require to add tokens to s1 and

0:08:50.529,0:08:52.040
to s4.

0:08:52.040,0:09:00.330
So, we add those tokens here.

0:09:00.330,0:09:09.890
When weâ€™ve finally done this, then we are
ready with our Petri Net and this should be

0:09:09.890,0:09:15.520
the Petri Net that we want to have for this
task.

0:09:15.520,0:09:23.850
It can look different of course, if you have
a different layout, but that's how we get

0:09:23.850,0:09:29.510
the Petri Net in the graphical representation.
