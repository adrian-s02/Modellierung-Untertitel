0:00:01.740,0:00:11.640
Welcome to this exercise task about class diagrams
or the syntax of class diagrams. In this case,

0:00:11.640,0:00:19.260
we have been given seven class diagrams, which
are simplified. So, there are no attributes and

0:00:19.260,0:00:33.660
no methods. These class diagrams simply consist
of boxes and have relationships between

0:00:33.660,0:00:44.400
them. So, we do not have to look at attributes
and methods here. We can assume that these

0:00:44.400,0:00:53.820
classes are well-formed. For instance, this A
class here shall be treated as a valid class,

0:00:53.820,0:01:01.440
and we just have to look at the connections
here. So, we have to justify our decision

0:01:01.440,0:01:13.440
if these class diagrams are valid just by the
syntax. For the first one, we have a composition

0:01:15.660,0:01:27.900
between A and B. So, A consists of B's. And
we have an aggregation where B's consist of A.

0:01:30.000,0:01:40.860
But this is not problematic. If it were just
compositions, then we would have cycled between

0:01:40.860,0:01:50.460
A and B, which is not allowed. But having an
aggregation here is not a problem. So, this one

0:01:50.460,0:02:00.600
here is a valid class diagram. So, consider the
next one. Here we have a composition where A's

0:02:00.600,0:02:16.620
consist of C's. And C consists of B's. And this is
not problematic in the first case. But then there

0:02:16.620,0:02:27.420
is an inheritance where B inherits from A. That
means B's are also A's. And when this happens,

0:02:27.420,0:02:34.980
then this means that they also inherit the
composition where A's consists of C's. And

0:02:34.980,0:02:41.160
this would mean that B's consist of C's whereas
C's consist of B's. And this is a composition

0:02:41.160,0:02:52.500
cycle. And that is why the second-class diagram
here is invalid. Let's consider the next one.

0:02:54.180,0:03:07.680
This one consists of three classes again.
And class B are compositions where B shall

0:03:07.680,0:03:15.780
be part of A and C at the same time. Because of
this one here, it is required for B's to have

0:03:15.780,0:03:28.200
an A. And it is also required for B's to have a
connection to C. So, that means B shall be part

0:03:30.960,0:03:40.080
of A and of C at the same time. And this is
not allowed as the composition rules are that

0:03:43.740,0:03:57.060
one part can only be a part of one
whole. So, this does not make sense.

0:03:58.680,0:04:04.620
So, we could argue that the class diagram
is valid. But if we say it's valid,

0:04:04.620,0:04:10.560
then we also have to admit that there is no
valid instance. So, we can also say this class

0:04:10.560,0:04:21.600
diagram is invalid. But if you say it's valid,
then you have to argue that there is no such case

0:04:23.460,0:04:34.680
where it would make sense at all. And that
is why there would be no such B existing.

0:04:36.660,0:04:47.580
We have two classes only in D. These classes
are A and B. And A shall inherit from B. And B

0:04:48.780,0:05:00.240
shall inherit from A. This is an inheritance
cycle, and inheritance cycles are not allowed. So,

0:05:00.780,0:05:08.160
this class diagram is invalid because it
does not make sense at all that B is an A,

0:05:08.160,0:05:18.780
and A is a B, and so on. There is no clear parent
class in this case. So this is not allowed.

0:05:19.920,0:05:30.420
Now, we have E, which is an aggregation
where A's are aggregated by A's. So,

0:05:32.880,0:05:42.240
this A class here is simply a self-aggregation.
Indeed, this is no problem. So, it would be

0:05:42.240,0:05:48.900
problematic for compositions. Cycles are not
allowed for compositions. It would be problematic

0:05:48.900,0:05:56.880
for inheritances. But it's no problem for
aggregation. Thus, we can say this one is correct.

0:05:58.920,0:06:09.840
Then we have the F class diagram. F
consists of the three classes again,

0:06:09.840,0:06:16.920
A, B, and C. And C shall inherit
from A. And C shall inherit from B.

0:06:18.480,0:06:29.580
Indeed, this is generally no problem. So, a
class can inherit from multiple classes. And for

0:06:29.580,0:06:36.480
abstract classes, it happens quite often that the
class has two interfaces. And this would be the

0:06:36.480,0:06:46.980
case here. So, interface A and interface B and C
inherit from two classes. And that's totally fine.

0:06:48.480,0:06:58.500
So, this is okay. And then we have G. Where we
have a constellation that looks roughly similar

0:06:59.760,0:07:10.080
to C. But this time, the compositions are the
other way around. So, B shall consist of C and

0:07:10.080,0:07:21.540
of A's. So, both parts belong to B. And if there
is a C, it has to have a connection to B. And if

0:07:21.540,0:07:29.400
there is an A, then it is actually a part of
B. But there is no problem with this because

0:07:31.920,0:07:39.120
a class can consist of multiple parts using
the composition. So, the composition can

0:07:41.340,0:07:54.000
be for multiple different parts. And
this is no problem at all. As a last note

0:07:55.560,0:08:04.680
on E here, when we consider this case here, if we
consider our picture, for instance, which consists

0:08:04.680,0:08:14.580
of subpictures, this could be something like this,
what we want to try when we have an aggregation of

0:08:15.480,0:08:24.780
A's to A's. So, if this would be the Picture type
that we had in tasks before, then we could say

0:08:24.780,0:08:31.980
when we compose them using the ampersand operator,
which was given in a video before as an example,

0:08:33.000,0:08:42.540
this could represent this one as well.
That's it for this task. Thank you very much.
