0:00:01.100,0:00:09.160
This is exercise five, task three. I'm going
to use XModeler software to solve it. I'm

0:00:09.160,0:00:23.630
going to create a project. Let's call it e5t3.
Now we have the project here. Let's create

0:00:23.630,0:00:33.350
a diagram. Let's call it anything, just give
it some name. And let's open that diagram.

0:00:33.350,0:00:42.800
In this task, we have two class diagrams.
And then we have object diagrams that we are

0:00:42.800,0:00:49.071
going to check whether they fit in the class
diagrams. With the xmodeler software, you

0:00:49.071,0:00:56.340
don't have to think a lot about whether the
object diagrams, these object diagrams fit

0:00:56.340,0:01:02.340
in these class diagrams. All you have to do
is to make the class diagrams correctly in

0:01:02.340,0:01:08.500
the software. And then as soon as you try
to make instances, as soon as you try to make

0:01:08.500,0:01:14.340
these object diagrams, you will see whether
you are doing something correctly or incorrectly.

0:01:14.340,0:01:20.300
So, it's going to warn you, it's going to
show you what you have to do and what the

0:01:20.300,0:01:27.150
constraints are basically. We're going to
see this now. Okay, let me do the first class

0:01:27.150,0:02:36.150
diagram. So, we have A, B, C and D.
A is a subclass of B. There's an association

0:02:36.150,0:03:12.040
between C and D. And it is 1 to 1.
There is an association between A

0:03:12.040,0:04:01.709
and C. And it is an aggregation.
There is an association between B

0:04:01.709,0:04:25.710
and D, and it is an aggregation.
And just like that we have the first class

0:04:25.710,0:04:34.900
diagram. Now, let's go ahead and try these
instances, these object diagrams. The first

0:04:34.900,0:04:43.320
one here we have an A and we have a C and
they're connected with some kind of association.

0:04:43.320,0:05:03.740
Let's try this here. Now, let's make an A
and a C instance. Okay, no warnings,

0:05:03.740,0:05:10.080
nothing happened. So far. So, good. Let's
do B. Sorry, I meant C, let's do an instance

0:05:10.080,0:05:33.611
of C.
And now it is giving us a warning. So, let's

0:05:33.611,0:05:47.870
make an instance of A. Nothing happened, it
just created the instance, everything's fine.

0:05:47.870,0:06:00.110
Let's make an instance of C. And as you can
see here, as soon as we created it, it is

0:06:00.110,0:06:08.280
telling us that the saying here, the object
C requires a link to an instance of D at level

0:06:08.280,0:06:15.139
zero. So, it is basically enforcing the existence
of an instance of D. Why is this happening?

0:06:15.139,0:06:24.770
It is because of this association here. And
we have options, we can actually make the

0:06:24.770,0:06:33.030
software ignore this issue for a while.
We can consider the constraints,

0:06:33.030,0:06:40.090
we can do it correctly by either creating
a new instance, or choosing an instance that

0:06:40.090,0:06:44.930
already exists. So, if you had an instance
of D that already exists somewhere here, we

0:06:44.930,0:06:52.960
can choose it and link C to it. Link our instance
of C, I mean. But since we don't have an instance

0:06:52.960,0:07:03.350
of D, let's create a new one. Yeah, whatever
call it d1, it's fine. And put it like this.

0:07:03.350,0:07:10.880
And now it's saying: “Well, d1 itself now
requires an instance of C.” So, since this

0:07:10.880,0:07:17.680
one was created for this C, let's just link
it with it. So, we pick an existing C, which

0:07:17.680,0:07:25.830
is this one that we already have. And we press
OK. And now they are linked. And by the way,

0:07:25.830,0:07:38.229
let me fix this one. Yes, looks good now.
So, we have our answer now, which is that

0:07:38.229,0:07:45.889
this one here, does not fit to this class
diagram here. We don't even have to continue,

0:07:45.889,0:07:51.680
we don't even have to make-. Sorry, we don't
even have to make this association. We don't

0:07:51.680,0:07:56.680
even need it, we already have a problem, which
is that we have a C that is not linked to

0:07:56.680,0:08:04.861
any D while this association is enforcing
the existence of a D for each C. So, here

0:08:04.861,0:08:14.789
we have it. xmodeler give us an answer. And
we can continue let's do the rest of the object

0:08:14.789,0:08:30.849
diagrams and the other class diagram. Let
me remove this one. Let's try the

0:08:30.849,0:08:45.580
other one. We have B, C and D connected to
each other. Let's do this. Not a MetaClass,

0:08:45.580,0:09:17.510
should be an instance. So, just like
the previous case, we have this association

0:09:17.510,0:09:31.579
here being enforced. And now let's connect
BC and BD. And as you can see, as soon as

0:09:31.579,0:09:40.279
we created a link between B and D, these two
instances we have this association now and

0:09:40.279,0:09:53.250
it automatically named it as aggr2. So, it
recognizes that we are doing this one here

0:09:53.250,0:09:59.180
and now finally, we have a link between B and
C, let's try to do this here. So, link from

0:09:59.180,0:10:06.550
B to C and it says there is an error, the
selected objects don't fit any association

0:10:06.550,0:10:17.540
definition. And let's look at the object diagram.
This is true, there is no link between something

0:10:17.540,0:10:26.610
of class B and something of class C. If this
B that we have here, if it was

0:10:26.610,0:10:35.100
a specific type of B, which is some A, a subclass
of B, if it were an instance of A that would

0:10:35.100,0:10:39.790
have been fine because of this aggregation,
this association here. But now since it's

0:10:39.790,0:10:45.310
just a general B, there is no link between
B and C. And the software is recognizing this

0:10:45.310,0:11:42.000
fact. Now let's do the third object diagram,
we have A, B, C, D. And we see that

0:11:42.000,0:11:50.570
this one fits, everything is fine. This one
got recognized and is aggr1, this one got

0:11:50.570,0:11:58.440
recognized too, this is aggr2, this is the
association that was enforced. Everything's

0:11:58.440,0:12:58.680
fine. Now let's do class diagram D, the fourth
class diagram, we have A, C, D. Right

0:12:58.680,0:13:16.990
so, this one fits, so everything's fine. Let's
do the last one. We have A, D, D, we have

0:13:16.990,0:13:52.960
two D’s. And it is enforcing the
existence of C because of the same association,

0:13:52.960,0:14:02.510
this one here. So, we already know that this
one does not fit. Now let's do the second

0:14:02.510,0:14:11.890
class diagram. This one here we have A, B,
C, D and we have the same inheritance as the

0:14:11.890,0:14:19.230
first one. We have this aggregation, we just
need to change the multiplicity here. We have

0:14:19.230,0:17:23.120
this aggregation but instead of going to A,
it's with C and B.

0:17:23.120,0:17:30.251
There's a problem here, I meant to edit this
one for some reason it edited this one. Let's

0:17:30.251,0:19:23.790
fix it. Let's do the first one.
A and C. So, as soon as we created

0:19:23.790,0:19:35.100
an A, it required two D’s. Because and A
is inheriting. An A is a B so it’s inheriting

0:19:35.100,0:19:40.110
this aggregation here and this aggregation
enforces the existence of two D’s because

0:19:40.110,0:19:50.190
of this multiplicity. So, the answer is it
does not fit. The first one does not fit.

0:19:50.190,0:20:21.980
Let's do the second one. We have B C D connected
to each other. And now it is enforcing

0:20:21.980,0:20:31.730
the existence of a D. So, we have a D here,
everything's fine. But we're going to need

0:20:31.730,0:20:37.380
another D, for this instance of B. And this
does not exist. So, we can already see that

0:20:37.380,0:20:51.820
it's not fitting, but let's continue, let's try.
The object B requires a link to an instance

0:20:51.820,0:20:58.929
of D at level 0. You tell it, okay, let's
choose the same D here, that D that we already

0:20:58.929,0:21:19.750
have. It does not accept. You see it? So,
it wants us to create another D.

0:21:19.750,0:21:29.300
And then it says B requires a link to an instance at level 0,
so we choose the d1, this new d. And now it stops complaining.

0:21:29.300,0:21:36.270
But now it's already different from what we
have here. Here we have one D. And here we

0:21:36.270,0:21:52.200
have two D’s. So, the answer is it does
not fit. Let's do the third one. A,

0:21:52.200,0:22:09.679
B, C, D. Again, as soon as we create an A,
it asks us where is the two D’s, it requires

0:22:09.679,0:22:22.540
two D’s because just like the first case,
A inherits this aggregation from B. So, the

0:22:22.540,0:22:31.450
existence of an A enforces or requires the
existence of two different D’s. So, we already

0:22:31.450,0:22:36.110
know this one does not fit. As soon as we
make two D’s here, it's going to look different

0:22:36.110,0:22:41.620
from this one. So, the answer is this one
does not fit. Let's continue with this one.

0:22:41.620,0:22:48.760
Let's do the fourth one. We have A, C, D.
The same is going to happen. We have an A.

0:22:48.760,0:22:55.861
So, we must have two Ds, but here we have
just one and now here the last one. Let's

0:22:55.861,0:23:03.059
do the last one. We have A, and the existence of
A requires the existence of two D’s. This

0:23:03.059,0:23:43.539
is fine. Let's see if there are any further
problems. And that's it. Nothing

0:23:43.539,0:23:49.820
else is being enforced. Nothing is required.
So, this means this one fits.
