0:00:00.840,0:00:05.480
In this task, we need to give a 1-safe and
loop free petri net.

0:00:05.480,0:00:09.769
1-safe means just at max one token per place.

0:00:09.769,0:00:18.460
With seven transitions
t1, t2, t3, t4, t5, t6, t7, with exactly one

0:00:18.460,0:00:21.780
marker in the initial marking.

0:00:21.780,0:00:28.429
And to make this a little trickier, we are
given a bunch of firing sequences of transitions,

0:00:28.429,0:00:30.320
some of which are supposed to be possible.

0:00:30.320,0:00:38.340
A, B and C needs to be possible, it should
be possible to fire t1, t2, t3, t4, t5 and

0:00:38.340,0:00:45.230
the same for B and C. But it should not be
possible to for example fire t1, t2, t3, then

0:00:45.230,0:00:49.370
t5 and only then t4.

0:00:49.370,0:00:54.989
These are different orderings of transition
activations and these can't be possible and

0:00:54.989,0:00:57.879
these must be possible.

0:00:57.879,0:01:04.299
There's a couple of hints down here, we should
try to read off the existing causalties, concurrencies

0:01:04.299,0:01:07.220
and conflicts from the allowed and non-allowed
firing sequences.

0:01:07.220,0:01:16.350
We’ll just work our way through how to construct
a Petri net based on these firing sequences.

0:01:16.350,0:01:23.770
And the task description says that at
least, these should be possible.

0:01:23.770,0:01:28.470
But that means that only these must be possible.

0:01:28.470,0:01:31.950
There could be other ones that are not considered
here.

0:01:31.950,0:01:40.360
It's not necessary to construct our Petri
net only these three are possible.

0:01:40.360,0:01:43.299
There could be other ones.

0:01:43.299,0:01:47.500
And we're told that the Petri net may have
an arbitrary number of places, so we're not

0:01:47.500,0:01:49.900
restricted in that regard.

0:01:49.900,0:01:55.630
Just starting out, we can take a couple of
different approaches but we shouldn't start

0:01:55.630,0:01:57.950
by looking at the ones that are not possible.

0:01:57.950,0:02:02.860
It would be best if we just start with one
of these possible ones, construct our petri net

0:02:02.860,0:02:08.280
according to that, and then start modifying
it step by step based on the other ones that

0:02:08.280,0:02:11.050
are possible, and then on the ones that are
not possible.

0:02:11.050,0:02:16.920
If we look at the ones that are possible,
they always start with t1.

0:02:16.920,0:02:24.040
We can expect that there's some initial place
with one token, because that's what the task

0:02:24.040,0:02:25.040
asks for.

0:02:25.040,0:02:32.040
Let's try it incorrectly first.

0:02:32.040,0:02:38.600
Let's say we start with a t1 and this just
gives a token into some other place that we

0:02:38.600,0:02:39.600
haven’t drawn yet.

0:02:39.600,0:02:44.709
This would not be allowed because this means
that there is not exactly one marking the

0:02:44.709,0:02:46.709
whole initial marking yet.

0:02:46.709,0:02:52.340
Because we might put another token somewhere
else in another place.

0:02:52.340,0:02:57.780
But in that case, we might eventually move
that token into that place to live into two

0:02:57.780,0:02:58.870
tokens and one place.

0:02:58.870,0:03:01.770
And in that case, it's no longer 1-safe.

0:03:01.770,0:03:07.090
So, this exactly one marker basically
just limits us to staying at some initial

0:03:07.090,0:03:09.680
place with one token in it.

0:03:09.680,0:03:18.750
And according to our possible sequences, t1
can always fire as the first one.

0:03:18.750,0:03:21.450
So, this is our starting point.

0:03:21.450,0:03:28.769
For that, it is possible to fire t2 or t3.

0:03:28.769,0:03:35.790
Since t2 and t3 in the allowed sequences are
just in different order here, this kind of

0:03:35.790,0:03:42.240
shows us that they are either in parallel,
so we could either do t2 or t3 or there might

0:03:42.240,0:03:44.250
be something else going on.

0:03:44.250,0:03:54.470
One possibility is just to say, t1 deposits
token into another place.

0:03:54.470,0:04:05.110
And from that place, there's a transition
t2, and it also deposits a token into this

0:04:05.110,0:04:08.519
place from where there's a transition t3.

0:04:08.519,0:04:13.030
So, this would mean they are in parallel because
after firing t1, there's a token here, there's

0:04:13.030,0:04:18.979
a token here, and then either t2 or t3 can
activate.

0:04:18.979,0:04:26.199
However, if we now look at our sequences which
are not allowed, there is no sequence where

0:04:26.199,0:04:31.110
the first activation can't be t3.

0:04:31.110,0:04:38.220
And since we are told by at least down here
that there could be other possible firing

0:04:38.220,0:04:42.110
sequences, it is also imaginable that there
is no place down here.

0:04:42.110,0:04:48.980
So, t1 only to put it up here and this is
a transition that just doesn't have any preconditions

0:04:48.980,0:04:51.210
and just deposit somewhere.

0:04:51.210,0:04:58.840
If we put a place after both of those, we
have one other possibility.

0:04:58.840,0:05:06.639
In this case, the firing sequence could be
t1, t2, then t3 like up here, or t1, then

0:05:06.639,0:05:09.780
t3, in which case, there's a token here and
here and then t2.

0:05:09.780,0:05:11.170
This is also allowed.

0:05:11.170,0:05:19.330
And, of course, t3 could also fire as the
very first one, because there's no firing

0:05:19.330,0:05:22.350
sequence down here which disallows that.

0:05:22.350,0:05:26.630
This is also a possibility.

0:05:26.630,0:05:33.860
Moving on in the allowed firing sequences,
the next one after either t2 and t3 in sequence

0:05:33.860,0:05:39.630
is always t4.

0:05:39.630,0:05:48.340
We could draw that like this, put a transition
t4 down here, which consumes both tokens from

0:05:48.340,0:05:54.770
the places where t2 and t3 deposited into.

0:05:54.770,0:05:59.250
Afterwards, either t5, t6 or t7 are possible.

0:05:59.250,0:06:03.090
So, t4 definitely deposit somewhere.

0:06:03.090,0:06:17.419
And from that place, there's t5, t6 or t7
possible.

0:06:17.419,0:06:26.139
We draw it like this, then they all pull from
one of these places, and only one of them

0:06:26.139,0:06:27.889
can fire.

0:06:27.889,0:06:31.880
That's important because if we look at the
sequences which are not allowed, we have this

0:06:31.880,0:06:39.330
sequence I, which is t1, t2, t3, t4 exactly
like our first one, then t5, also exactly

0:06:39.330,0:06:42.919
like first one but then also t6.

0:06:42.919,0:06:49.680
And since that is not allowed, that kind of
tells us that there’s a case here where

0:06:49.680,0:06:56.000
these are pulling from a common place or
there's some other sort of restriction here

0:06:56.000,0:07:01.800
which means that not all of these can fire
and it can only be one of them firing.

0:07:01.800,0:07:11.221
Well, technically, I guess t5 and t7 could
be allowed because there's no firing sequence

0:07:11.221,0:07:13.220
here which disallows it.

0:07:13.220,0:07:20.190
It might be possible that t5 and t6 are pulling
from the same pool but t6 and t7, for example

0:07:20.190,0:07:24.229
are not, or t5 and t7 are not.

0:07:24.229,0:07:31.419
And since this is not drawn in here, we don't
necessarily need to do that.

0:07:31.419,0:07:38.500
But let's just modify this a little bit to
make it work like that.

0:07:38.500,0:07:45.940
In that case, we would need at least four
places here where t4 deposits.

0:07:45.940,0:07:55.770
So, t5, t6, and t7, all of those each
share two spaces.

0:07:55.770,0:08:06.720
If t4 deposits into all four of these, and
then we have our transition t5 which pulls

0:08:06.720,0:08:15.530
from this place and this place, and t6 which
pulls from this place and this place, then

0:08:15.530,0:08:22.789
t5 and t6 would be in conflict and this firing
sequence down here would not be allowed but

0:08:22.789,0:08:28.169
t5 and t7 for examples.

0:08:28.169,0:08:36.180
T7 could be possible because t5 pulls from
both of these and t7 pulls from both of these,

0:08:36.180,0:08:39.190
so those could fire after each other.

0:08:39.190,0:08:43.560
And that's not a sequence that is not allowed.

0:08:43.560,0:08:48.740
So that could be possible as well.

0:08:48.740,0:08:55.720
Now this Petri net already contains all of
our choices in t1, t2, t3, t4, t5, t6 and

0:08:55.720,0:08:56.720
t7.

0:08:56.720,0:09:02.100
And now we just need to make sure that we've
drawn it correctly and all the firing sequences

0:09:02.100,0:09:07.769
that are allowed work, so let's go through
t1, t2, t3, t4, t5.

0:09:07.769,0:09:14.121
Going from here, t1, t2, t3, activates, puts
a token in here.

0:09:14.121,0:09:15.650
That means there's two tokens here.

0:09:15.650,0:09:21.290
So, t4 can activate, puts one token in each
of these and then t5 can activate.

0:09:21.290,0:09:24.990
So, A works in our Petri net.

0:09:24.990,0:09:33.630
B is t1, t2, t3, t4 and then t6 that would
also work, it’s basically just the same

0:09:33.630,0:09:39.560
and t1, token here, t3, token here, then t2,
token here.

0:09:39.560,0:09:44.490
Once again, three conditions for t4 are met,
t4 activates its token, then all of these

0:09:44.490,0:09:47.089
and then t7 can activate.

0:09:47.089,0:09:53.839
All of the ones that are supposed to work
can work.

0:09:53.839,0:09:59.660
The first of the ones that are not allowed, t1 and
t2, then t3.

0:09:59.660,0:10:00.950
And then t5.

0:10:00.950,0:10:07.120
That's not possible because t5 expects that
there's tokens in here and that can only happen

0:10:07.120,0:10:10.300
if t4 fired first.

0:10:10.300,0:10:16.860
D doesn't work and our Petri net satisfies
that condition.

0:10:16.860,0:10:20.820
Let's put these ticks that they satisfy the
condition.

0:10:20.820,0:10:27.900
T2 first doesn't work because there's no token
in here, so that one is satisfied as well.

0:10:27.900,0:10:32.700
T1 and then t4 doesn't work either because
t4 expect the token here to here, that doesn't

0:10:32.700,0:10:33.790
work either.

0:10:33.790,0:10:39.050
So, that's satisfied, t1, t2, not t3.

0:10:39.050,0:10:44.140
And then t4 doesn't work because t4 definitely
expected token down here.

0:10:44.140,0:10:45.850
That one is satisfied as well.

0:10:45.850,0:10:50.300
T1, t3, that works for now.

0:10:50.300,0:10:54.200
Then t4 doesn't work because t2 needs to activate
first.

0:10:54.200,0:11:03.510
That one is satisfied and t1, t2, t3, t4,
t5, t6, this is where our conflicts implementation

0:11:03.510,0:11:08.730
here comes into play is because t5 and t6
can't activate because they share this common place

0:11:08.730,0:11:12.450
in here, which only has one token, so that
one is satisfied.

0:11:12.450,0:11:15.840
And t1, t3, t2, that works.

0:11:15.840,0:11:17.780
Then t4, that also works.

0:11:17.780,0:11:25.390
And then tokens in all of these and t6 and
t7, once again, they share this complex here,

0:11:25.390,0:11:29.240
so these can't activate after each other either.

0:11:29.240,0:11:36.420
All of the conditions that were given are
satisfied, and we have a Petri net that fits

0:11:36.420,0:11:38.410
the task.

0:11:38.410,0:11:47.089
Now, of course yours might look a little differently,
or some sections might be different.

0:11:47.089,0:11:53.260
Like we did at first in this place, this still
satisfies all of these conditions, but it's

0:11:53.260,0:11:55.750
not technically necessary to have that place.

0:11:55.750,0:11:57.904
But that's no problem if you have it.

0:11:57.904,0:12:00.779
As long as all of these conditions are satisfied,
that’s fine.
