0:00:02.669,0:00:11.879
This task is again about Petri Nets and this
time we have to model a Petri Net.

0:00:11.879,0:00:22.689
And the Petri Net is already partially given
below here, and the description says what

0:00:22.689,0:00:27.800
we shall model here in this Petri Net.

0:00:27.800,0:00:31.200
And it is a check out with a cashier and a
customer.

0:00:31.200,0:00:40.149
So, a queue of customers and the conveyor
belt has space for the goods of two customers,

0:00:40.149,0:00:44.980
but at each time only one customer is explicitly
modeled.

0:00:44.980,0:00:54.120
So, we have just one customer modeled here
and one cashier, so, the checkout has two

0:00:54.120,0:00:56.219
places.

0:00:56.219,0:01:01.710
When a customer places goods on the conveyor
belt, they first occupy place one.

0:01:01.710,0:01:05.510
Goods in place one will be shifted to place
two.

0:01:05.510,0:01:12.290
And finally, the cashier processes the goods
which are in place two.

0:01:12.290,0:01:20.690
And the customer and also the cashier can
be either busy or waiting and the cashier

0:01:20.690,0:01:29.300
can only process goods if he is waiting and
place two of the conveyor belt is not empty.

0:01:29.300,0:01:37.329
And after successfully placing the goods or
processing them, the customer or cashier changes

0:01:37.329,0:01:53.570
to the state busy after which they become
waiting again shortly.

0:01:53.570,0:02:06.079
And after the customer was busy, the new customer
will become waiting, so, that's what the queue,

0:02:06.079,0:02:08.500
in this case, will be.

0:02:08.500,0:02:16.519
And there are blanks in the chart so, we have
to fill in the statements and we have to fill

0:02:16.519,0:02:18.000
in further arrows.

0:02:18.000,0:02:29.060
So, first of all, the customer is waiting
or busy this was mentioned here and this is

0:02:29.060,0:02:31.140
also true for the cashier.

0:02:31.140,0:02:41.110
So, these states here down below should be
the busy states respectively for the customer

0:02:41.110,0:02:42.250
and cashier.

0:02:42.250,0:02:48.000
So, one for the customer and one for the cashier.

0:02:48.000,0:02:52.580
And for the spaces, we have two states as
well, for both states.

0:02:52.580,0:02:57.019
For space one and space two it can be either
empty or full.

0:02:57.019,0:03:06.150
So, in this case, space two would be empty
and space one would be full.

0:03:06.150,0:03:13.920
So that we have both states for space one
and for space two.

0:03:13.920,0:03:28.280
And these places represent states, where
one of them has to be selected at all times,

0:03:28.280,0:03:34.420
because a space is either empty or full and
there's no in-between.

0:03:34.420,0:03:41.290
And also a cashierâ€™s either waiting or busy
and also the same for customer in space one.

0:03:41.290,0:03:52.560
So, that means when the customer for this
transaction, when the customer is waiting

0:03:52.560,0:03:59.950
it has to become either again waiting or busy,
after whatever is happening here.

0:03:59.950,0:04:09.030
So, we have to keep that in mind.

0:04:09.030,0:04:22.360
Now when the customer is waiting and space
one is empty, then the customer can place

0:04:22.360,0:04:24.900
goods onto space one.

0:04:24.900,0:04:33.930
This means that this transition can represent
a state so the space is empty and after the

0:04:33.930,0:04:37.690
transition, we expect the state to be full.

0:04:37.690,0:04:44.220
And also for the customer, who is waiting
before.

0:04:44.220,0:04:54.970
Well, when putting things onto the space,
expect him to be busy.

0:04:54.970,0:05:00.820
And then they can become waiting at any time.

0:05:00.820,0:05:04.490
So, that is why we have another transition
here.

0:05:04.490,0:05:13.320
So, when the customer was busy or is busy,
then he can become waiting again, which means,

0:05:13.320,0:05:18.090
in fact, that a new customer is coming for
the customer case.

0:05:18.090,0:05:26.360
So when the customer is busy and the space
is full now, so then the customer can step

0:05:26.360,0:05:40.259
aside, and
then there is space again.

0:05:40.259,0:05:45.710
We can think about how the second space becomes
full.

0:05:45.710,0:05:54.110
So the second space basically becomes full
when goods will be shifted from place one

0:05:54.110,0:05:55.770
to place two.

0:05:55.770,0:06:01.420
So, this transition should probably represent
a state.

0:06:01.420,0:06:13.710
This means we have goods in space one, but
we don't have goods in space two

0:06:13.710,0:06:24.050
because they can only be shifted if the first
space is empty

0:06:24.050,0:06:29.620
because if there are goods in space two, then
they haven't been processed by the cashier.

0:06:29.620,0:06:46.870
So, now, we can say, when space one is full
and space two is empty, then we want the goods

0:06:46.870,0:06:49.400
to be moved to space two.

0:06:49.400,0:07:01.620
That means space one should be empty afterwards,
and space two should be full afterwards.

0:07:01.620,0:07:09.879
And then again, we can think about the process
of how space two becomes empty.

0:07:09.879,0:07:18.970
So, we have a representation for getting it
full, and we have to think about how to get

0:07:18.970,0:07:20.720
it empty again.

0:07:20.720,0:07:28.150
And therefore, we need the cashier.

0:07:28.150,0:07:36.009
The cashier can only process goods if he is
waiting, and the place two of the conveyor

0:07:36.009,0:07:38.470
belt is not empty.

0:07:38.470,0:07:45.319
So this means this transaction should probably
represent this state, so the cashier is

0:07:45.319,0:07:53.820
waiting and space two is full.

0:07:53.820,0:08:00.740
And then there is written after successfully
placing the goods, the customer changes to

0:08:00.740,0:08:05.860
the state busy or processing them.

0:08:05.860,0:08:15.750
So this again is also for the cashier, so
when the cashier processes the goods then

0:08:15.750,0:08:24.160
he becomes busy.

0:08:24.160,0:08:33.800
And of course, when the space is processed,
it becomes empty again so that new goods can

0:08:33.800,0:08:35.940
be placed on it.

0:08:35.940,0:08:45.170
And after a short waiting time, again, as
it was for the customer, the busy cashier

0:08:45.170,0:08:54.620
will also become waiting again and therefore
we have this transition here.

0:08:54.620,0:08:58.990
And now we are done with our Petri net.

0:08:58.990,0:09:07.750
But as we have some conditions that we know
about this state, we can also check them.

0:09:07.750,0:09:14.690
And this is, for instance, finally thinking
about what happens for each transition.

0:09:14.690,0:09:22.310
And we could do this as a quality check at
the end and think about what happens for each

0:09:22.310,0:09:23.710
transition.

0:09:23.710,0:09:32.959
So for this transition here, for instance,
you could check that after we process this

0:09:32.959,0:09:47.519
transition, we still have tokens in each column
of this graph, so that the customer still

0:09:47.519,0:09:50.800
has the state and the space as well.

0:09:50.800,0:10:00.450
So when we process this transition, then tokens
would be going out of waiting and empty but

0:10:00.450,0:10:07.120
we would then have tokens in busy and full.

0:10:07.120,0:10:19.470
And then again, when we have a token
here, then it could go via this transition

0:10:19.470,0:10:24.720
here back to this place.

0:10:24.720,0:10:30.589
And this transition can only be active if
there is something within this place here.

0:10:30.589,0:10:41.870
So as it is required that we have a token
in this place here, and a token in here because

0:10:41.870,0:10:44.340
of these connections here.

0:10:44.340,0:10:54.650
So this means it could now process this by
activating this or firing this transition,

0:10:54.650,0:11:02.589
which would take those two tokens, move one
here and move one here.

0:11:02.589,0:11:12.430
And again, after doing that, he could again
fire this transition, which we already checked

0:11:12.430,0:11:19.060
is still just one token in each
column.

0:11:19.060,0:11:24.310
So this is what still persists also here.

0:11:24.310,0:11:27.280
So we have just one token here and only one.

0:11:27.280,0:11:40.800
So there's not zero tokens, it's exact exactly
one token in each column here.

0:11:40.800,0:11:51.640
And then finally this transition can only
be fired if there is a token in here.

0:11:51.640,0:12:03.079
And when we fire this transition, then we
remove these tokens and place them here, as

0:12:03.079,0:12:11.050
the arrows indicate, and then the space becomes
empty but the cashier becomes busy.

0:12:11.050,0:12:18.080
So still, it's the same picture, we only have
four tokens within our graph, and we have

0:12:18.080,0:12:25.060
exactly four tokens within our graph, so they
just shift.

0:12:25.060,0:12:30.690
And then again, this transition does also
nothing harmful, because still, we have just

0:12:30.690,0:12:34.870
one token in here, if we fire this transition.

0:12:34.870,0:12:47.550
So we have checked also that our graph is
working as expected, in the sense that no

0:12:47.550,0:13:02.440
token is additionally added in while executing
the graph, or that a token

0:13:02.440,0:13:03.790
gets completely removed.

0:13:03.790,0:13:13.050
We could check further interactions between
those but I think you get the picture of what's

0:13:13.050,0:13:19.220
going on and how you can check that your Petri
Net is correct.
