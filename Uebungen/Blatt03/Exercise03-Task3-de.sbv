0:00:01.010,0:00:04.359
In dieser Aufgabe beschäftigen wir uns wieder
mit Klassendiagrammen.

0:00:04.359,0:00:08.710
In diesem Fall haben wir aber kein Klassendiagramm
angegeben, sondern wir haben ein Szenario

0:00:08.710,0:00:13.480
angegeben und für dieses Szenario sollen
wir unser eigenes Klassendiagramm erstellen.

0:00:13.480,0:00:16.949
Das Szenario ist hier kurz beschrieben.

0:00:16.949,0:00:21.200
Nach jedem Semester wollen (die meisten) Studierenden
sich über die Kurse, die sie belegt haben,

0:00:21.200,0:00:22.200
prüfen lassen.

0:00:22.200,0:00:27.330
Und hier unten fängt es wirklich an mit dem
Szenario, mit den Informationen, die wir brauchen,

0:00:27.330,0:00:29.170
die in unser Klassendiagramm übernommen werden
sollen.

0:00:29.170,0:00:36.010
Hierfür lesen wir einfach nach und nach diesen
Text hier durch und übernehmen die Informationen

0:00:36.010,0:00:39.050
so, wie wir denken, dass sie in Klassendiagramme
gehören, in das Klassendiagramm.

0:00:39.050,0:00:42.179
Fangen wir einfach mal an.

0:00:42.179,0:00:44.909
Verschiedene Personen tauchen in unserem Modell
auf.

0:00:44.909,0:00:48.580
In erster Linie gibt es natürlich verschieden
alte Studierende, die sich prüfen lassen

0:00:48.580,0:00:49.580
wollen.

0:00:49.580,0:00:52.079
Und es gibt noch Prüfer und das Prüfungsamt.

0:00:52.079,0:00:56.820
Natürlich sind sowohl Studierende als auch
Prüfer Personen.

0:00:56.820,0:01:01.760
Die Implizierung durch diesen Text ist, dass
es eine Überklasse gibt, das ist Person.

0:01:01.760,0:01:08.170
Denn hier ist angegeben, dass natürlich sowohl
Studierende als auch Prüfer Personen sind.

0:01:08.170,0:01:09.750
Dies impliziert eine Vererbung.

0:01:09.750,0:01:19.220
Das heißt, wir haben auf jeden Fall eine
Klasse, Person, und zwei Klassen, Student,

0:01:19.220,0:01:24.500
und eine Klasse Prüfer.

0:01:24.500,0:01:38.650
Und diese beiden Klassen, Student und Prüfer,
sind Personen, das heißt, beide erben von

0:01:38.650,0:01:39.650
Person.

0:01:39.650,0:01:53.159
In drawio können wir hier einen kleinen Pfeil
rausziehen und damit hätten wir dann unseren

0:01:53.159,0:01:54.470
Vererbungsfall.

0:01:54.470,0:01:59.290
Die Pfeilspitzen sind hier wichtig, die sind
vielleicht ein bisschen klein geworden.

0:01:59.290,0:02:11.150
Das eine ist eine leere Pfeilspitze, das ist
auch eine leere Pfeilspitze für Vererbungspfeile,

0:02:11.150,0:02:16.749
und diese Pfeile, wenn ihr das auch mal in
drawio machen wollt, kann man hier an der

0:02:16.749,0:02:19.769
Seite umstellen, dass sie ... bestimmt und
die Pfeilspitzen.

0:02:19.769,0:02:24.050
Und der Vererbungspfeil wäre dann hier diese
offene, leere Spitze.

0:02:24.050,0:02:25.639
Da können wir vielleicht diesen dicken Pfeil
nehmen, den sieht man besser.

0:02:25.639,0:02:31.590
Damit haben wir dann unseren Vererbungspfeil.

0:02:31.590,0:02:36.329
Also, Student und Prüfer sind unsere beiden
Klassen, die beide von Person erben.

0:02:36.329,0:02:42.409
Jetzt haben wir hier natürlich noch die Default-Eingaben
von Methoden und Attributen drin, die wir

0:02:42.409,0:02:44.939
jetzt nach und nach ersetzen.

0:02:44.939,0:02:48.090
Wenn wir nochmal zurückgehen, haben wir hier
oben noch Informationen.

0:02:48.090,0:02:50.730
Es gibt noch Prüfer und das Prüfungsamt.

0:02:50.730,0:02:56.290
In erster Linie gibt es verschieden alte Studierende,
das heißt bei Student haben wir auf jeden

0:02:56.290,0:03:02.219
Fall das Attribut Alter, das wahrscheinlich
als Int angegeben wird.

0:03:02.219,0:03:06.930
Man gibt sein Alter üblicherweise nicht als
22,5 an, sondern in ganzen Jahren.

0:03:06.930,0:03:09.989
Das heißt, wir machen aus dem Alter ein Int.

0:03:09.989,0:03:20.510
Und sonst haben wir in diesem Textabschnitt
erst mal keine Informationen.

0:03:20.510,0:03:28.340
Auch wenn es logisch vielleicht Sinn ergibt,
dass Person und Prüfer auch ein Alter haben,

0:03:28.340,0:03:30.559
haben wir bisher keine Anhaltspunkte dafür
in dem Text.

0:03:30.559,0:03:34.709
Deshalb machen wir die auch noch nicht rein,
sondern gucken erst mal weiter, was wir noch

0:03:34.709,0:03:38.349
für andere Attribute finden oder ob es vielleicht
noch Hinweise gibt, dass Person und Prüfer

0:03:38.349,0:03:40.190
auch Alter haben.

0:03:40.190,0:03:43.569
Wir lesen jetzt weiter.

0:03:43.569,0:03:49.739
Jede Person hat einen Namen, aber nur Studierende
haben eine Matrikelnummer.

0:03:49.739,0:03:57.449
Also ist Name ein Attribut der Überklasse,
wahrscheinlich ein String.

0:03:57.449,0:04:00.760
Und Studenten haben auch noch Matrikelnummern.

0:04:00.760,0:04:08.919
Wir ziehen uns mit den Funktionen von drawio
ein neues Attribut mit rein und machen das

0:04:08.919,0:04:13.349
zu Matrikelnummer.

0:04:13.349,0:04:18.920
Matrikelnummer ist normalerweise auch ein
Int, also geben wir hier Int an und lesen

0:04:18.920,0:04:20.450
dann weiter.

0:04:20.450,0:04:25.920
Prüfer sind bezüglich ihres Alters etwas
sensitiv, dieses sollte für sie daher nicht

0:04:25.920,0:04:26.920
abgespeichert werden.

0:04:26.920,0:04:34.080
Da haben wir jetzt unsere Absicherung, dass
Person und Prüfer kein Attribut Alter haben,

0:04:34.080,0:04:36.650
denn die Prüfer wollen ihr Alter nicht abgespeichert
haben.

0:04:36.650,0:04:42.090
Das heißt, dieses Attribut gehört nur in
Student rein.

0:04:42.090,0:04:46.810
Prüfer sind für einen bestimmten Kurs verantwortlich,
deshalb sollte dessen Name für sie abgespeichert

0:04:46.810,0:04:47.810
werden.

0:04:47.810,0:04:52.340
Das heißt, Prüfer kriegt ein Attribut Kursname,
für das sie verantwortlich sind, und das

0:04:52.340,0:04:54.540
ist wahrscheinlich auch ein String.

0:04:54.540,0:04:57.170
Beziehungsweise, String ergibt am meisten
Sinn.

0:04:57.170,0:05:03.880
Wir haben noch eine weitere Klasse, das Prüfungsamt.

0:05:03.880,0:05:05.510
Beim Prüfungsamt gibt es eine Anzahl Mitarbeiter.

0:05:05.510,0:05:07.030
Das haben wir bisher nicht gemacht.

0:05:07.030,0:05:10.220
Wir haben Prüfungsamt schon mal erwähnt,
aber wir haben es noch nicht reingemacht.

0:05:10.220,0:05:11.910
Also machen wir das jetzt.

0:05:11.910,0:05:20.980
Wir haben eine separate Klasse, Prüfungsamt,
und Prüfungsamt hat eine Anzahl Mitarbeiter.

0:05:20.980,0:05:30.660
Diese Anzahl,
aber keine weiteren Informationen zu Mitarbeitern,

0:05:30.660,0:05:34.140
muss gespeichert werden, um den Arbeitsaufwand
verteilen zu können.

0:05:34.140,0:05:39.910
Das heißt, wir haben jetzt hier, auch wenn
es Mitarbeiter gibt, keine Implizierung, beziehungsweise

0:05:39.910,0:05:43.910
spezifisch wurde uns gesagt, es werden keine
Informationen zu Mitarbeitern gespeichert.

0:05:43.910,0:05:48.480
Das heißt, wir machen auch keine extra Klasse
für die Mitarbeiter, wir belassen es einfach

0:05:48.480,0:05:54.690
beim Prüfungsamt und geben dem ein Attribut
AnzahlMitarbeiter.

0:05:54.690,0:05:59.540
Was wahrscheinlich auch Int ist, denn es gibt
vermutlich keine halben Mitarbeiter oder sowas.

0:05:59.540,0:06:04.310
Und damit ist unser Szenario erstellt.

0:06:04.310,0:06:07.220
Das hier unten ist nur noch eine kurze Erklärung
in der Aufgabe.

0:06:07.220,0:06:13.770
Gehen wir das Szenario nochmal durch, ob wir
auch nichts vergessen haben.

0:06:13.770,0:06:18.340
Jede Person hat einen Namen, aber nur Studierende
haben eine Matrikelnummer, das ist drin.

0:06:18.340,0:06:22.680
Das Alter bei Student ist drin, der Kursname
bei Prüfer ist auch drin.

0:06:22.680,0:06:24.380
AnzahlMitarbeiter bei Prüfungsamt ist auch drin.

0:06:24.380,0:06:27.770
Jetzt müssen wir noch gucken, ob es irgendwelche
Methoden gibt.

0:06:27.770,0:06:33.750
Im Text sind keine Anhaltspunkte für Methoden,
das heißt, wir nehmen die Methode hier einfach

0:06:33.750,0:06:35.030
raus.

0:06:35.030,0:06:39.840
Hier müssen wir bei drawio darauf achten,
dass wir nicht den ganzen Kasten unten löschen,

0:06:39.840,0:06:48.130
denn, wie schon erwähnt, ist es syntaktisch
ein Fehler, diesen Kasten nicht zu haben.

0:06:48.130,0:06:57.970
Bei Klassendiagrammen müssen diese Kästen
immer auch dann einen leeren Kasten für Methoden

0:06:57.970,0:07:01.530
haben, wenn keine Methoden vorhanden sind.

0:07:01.530,0:07:05.880
Dieser kleine Strich hier unten reicht, um
zu zeigen, das ist eine Klasse, denn wir haben

0:07:05.880,0:07:10.530
hier drei Kästen, auch wenn der unterste
leer ist.

0:07:10.530,0:07:12.020
So wäre das syntaktisch korrekt.

0:07:12.020,0:07:16.500
Es gibt keine Verbindung vom Prüfungsamt
zum Prüfer, denn davon ist im Text nichts

0:07:16.500,0:07:17.500
impliziert.

0:07:17.500,0:07:20.840
Also ist damit unser Klassendiagramm in dieser
Aufgabe fertig.
