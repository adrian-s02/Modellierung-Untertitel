0:00:02.159,0:00:06.029
Willkommen zum Video zur Übungsaufgabe zu
Generalisierungsgruppen.

0:00:06.029,0:00:12.139
Die Übungsaufgabe ist hier im unteren Teil
des Bildschirms auch noch einmal zu sehen.

0:00:12.139,0:00:16.550
Hier geht es darum, eine Klassen-Hierarchie
für Rechner zu entwickeln.

0:00:16.550,0:00:25.859
Die zur Verfügung stehenden Klassen sind
hier oben schon als Template vorhanden.

0:00:25.859,0:00:29.140
Die habe ich hier bereits schon erzeugt.

0:00:29.140,0:00:40.690
Im ersten Teil geht es tatsächlich darum,
eine sinnvolle Hierarchie für diese Klassen

0:00:40.690,0:00:46.140
zu erstellen, und zwar unter Zuhilfenahme
geeigneter Generalisierungsgruppen.

0:00:46.140,0:00:55.880
Um Methoden braucht man sich hier noch nicht
zu kümmern und auch nicht um Attribute.

0:00:55.880,0:00:57.520
Attribute kommen dann im zweiten Teil.

0:00:57.520,0:01:00.780
Methoden sind gar nicht notwendig.

0:01:00.780,0:01:09.300
Was wären mögliche Generalisierungsgruppen
für die hier genannten Klassen?

0:01:09.300,0:01:15.620
Also wir haben hier Rechner, Server, Client,
Laptop und Tablet.

0:01:15.620,0:01:22.860
Da könnte man sich zuerst überlegen, dass
man vielleicht unterscheidet, wie diese Geräte

0:01:22.860,0:01:25.680
verwendet werden.

0:01:25.680,0:01:36.330
Für Client und Server könnte man sagen,
dass das sozusagen ein Unterscheidungsmerkmal

0:01:36.330,0:01:41.700
ist und die Oberklasse davon wäre dann der
Rechner.

0:01:41.700,0:01:49.420
Also wir könnten sagen, der Server soll vom
Rechner erben und auch der Client soll vom

0:01:49.420,0:01:52.620
Rechner erben.

0:01:52.620,0:01:59.700
Dann könnten wir überlegen, was es noch
gibt.

0:01:59.700,0:02:08.640
Wir haben ja noch Laptop und Tablet und das
sind schon spezielle Geräte.

0:02:08.640,0:02:18.440
Deshalb könnte man da von Geräte-Klassen
sprechen und diese dann unterscheiden, indem

0:02:18.440,0:02:19.840
diese wiederum erben.

0:02:19.840,0:02:28.610
Und die könnten zum Beispiel von Client erben,
da man es so sehen kann, dass Tablet und Laptop

0:02:28.610,0:02:31.770
eben Client-Systeme sind.

0:02:31.770,0:02:39.970
Dementsprechend können wir hier die Vererbung
so einzeichnen, dass Tablet und Laptop von

0:02:39.970,0:02:47.170
Client erben, sowie Server und Client von
Rechner, insgesamt sind dann alle Rechner.

0:02:47.170,0:03:00.870
Ich hatte gesagt, die Kategorie hier in dem
ersten Fall wäre dann die Nutzungsart, in

0:03:00.870,0:03:11.130
dem Fall hier drüben wäre es die Geräteklasse.

0:03:11.130,0:03:24.850
Dann gilt es natürlich noch weiter zu unterscheiden,
ob die Generalisierungsgruppen, die jetzt

0:03:24.850,0:03:31.850
verwendet wurden, complete oder incomplete
sind, ob sie disjoint oder overlapping sind.

0:03:31.850,0:03:43.130
Für das complete müsste man hier bei der
Nutzungsart sagen, dass es erfüllt ist.

0:03:43.130,0:03:47.310
Also wir haben entweder einen Server oder
einen Client.

0:03:47.310,0:03:53.030
Und wie sieht das hier bei dem Tablet und
dem Laptop aus?

0:03:53.030,0:03:59.900
Da ist es wahrscheinlich eher so, dass das
unvollständig ist, denn es könnte ja zum

0:03:59.900,0:04:06.510
Beispiel noch einen Desktop geben, weshalb
es incomplete wäre.

0:04:06.510,0:04:13.390
Also sobald man dann auch ein Beispiel findet,
was nicht vorhanden ist, dann wäre der Status

0:04:13.390,0:04:15.530
complete schon nicht erfüllt.

0:04:15.530,0:04:19.690
Das ist hier in dem Fall so, denn wie schon
erwähnt, der Desktop wäre noch eine weitere

0:04:19.690,0:04:22.930
Option, deshalb ist es incomplete.

0:04:22.930,0:04:29.070
Die zweite Frage wäre, ist es disjoint oder
overlapping?

0:04:29.070,0:04:33.790
Also gibt es Systeme, die beides erfüllen
können?

0:04:33.790,0:04:41.380
Und beim Server und Client würde ich es so
sehen, dass diese disjoint sind.

0:04:41.380,0:04:53.030
Also entweder es ist ein Client oder ein Serverrechner,
dementsprechend ist das disjoint hier.

0:04:53.030,0:05:00.270
Beim Tablet und beim Laptop, also beim Client,
da gibt es auch Geräte, die sowohl Tablet

0:05:00.270,0:05:03.780
oder Laptop sind, also solche Convertibles.

0:05:03.780,0:05:09.500
Das wäre also hier in dem Fall overlapping.

0:05:09.500,0:05:15.470
Damit ist schon mal der Teil A der Aufgabe
erledigt.

0:05:15.470,0:05:21.960
Die Begründung, die habe ich hier mit angeführt.

0:05:21.960,0:05:29.030
Wie schon erwähnt, für die Unterscheidung
in der Nutzungsart hätte ich gesagt der Server

0:05:29.030,0:05:30.650
und der Client.

0:05:30.650,0:05:35.940
Das sind sozusagen verschiedene Arten, einen
Rechner zu nutzen.

0:05:35.940,0:05:41.760
Die Geräteklasse, die bezieht sich auf den
Client.

0:05:41.760,0:05:50.820
Also diese Tablet- und Laptop-Geräteklasse,
weil diese Rechner eben solche Tablets oder

0:05:50.820,0:05:53.300
Laptops sein können.

0:05:53.300,0:06:03.380
Für die Begründung warum hier das ganze
complete ist, wie gesagt der Server und der

0:06:03.380,0:06:04.380
Client.

0:06:04.380,0:06:10.479
Das ist eine vollständige Unterscheidung
dieser Nutzungsarten und es ist kein System-Server

0:06:10.479,0:06:12.760
und Client gleichzeitig.

0:06:12.760,0:06:23.970
Bei der Geräteklasse hatten wir diese Convertibles,
welche Tablets und Laptops sind, deshalb overlapping

0:06:23.970,0:06:28.330
und unvollständig, weil zum Beispiel der
Desktop fehlt.

0:06:28.330,0:06:35.440
Jetzt sollten für drei der Klassen noch Attribute
angegeben werden, die eingetragen werden sollen.

0:06:35.440,0:06:41.860
Da könnten wir jetzt für alle Klassen einfach
überlegen, was hier vorhanden sein könnte.

0:06:41.860,0:06:48.680
Beim Rechner könnte man sagen, jeder Rechner
hat irgendwie eine bestimmte Anzahl von Kernen.

0:06:48.680,0:06:55.590
Also das könnte man hier als Integer zum
Beispiel festhalten, irgendwelche Kerne, in

0:06:55.590,0:06:56.990
dem Prozessor.

0:06:56.990,0:07:07.410
Heutzutage sind Multicore-Prozessoren der
Standard und das gilt sowohl für Server als

0:07:07.410,0:07:10.320
auch für Clients, dass sie solche haben.

0:07:10.320,0:07:15.810
Bei einem Server, ist sicherlich interessant,
was er anbietet, was man mit ihm machen kann.

0:07:15.810,0:07:21.820
Also der Service ist dort relevant, den würde
ich hier auch angeben.

0:07:21.820,0:07:31.110
Bei einem Client könnte so etwas sein wie
die Festplatten-Größe.

0:07:31.110,0:07:41.420
Also die Aufgabe gibt ja auch an, dass unterschieden
werden soll oder nur Attribute angegeben werden

0:07:41.420,0:07:47.030
sollen, die sozusagen explizit für diese
Klasse gelten.

0:07:47.030,0:07:50.650
Was wäre bei der Festplatten-Größe das
Argument dafür?

0:07:50.650,0:07:55.390
Ein Client-Rechner zum Beispiel hat eine solche
Festplatte.

0:07:55.390,0:08:01.491
Ein Server nicht unbedingt, denn dort ist
zum Beispiel ein Netzwerk-Boot möglich, über

0:08:01.491,0:08:03.410
den das System startet.

0:08:03.410,0:08:09.920
Und dann gibt es Network-Attached-Storage
oder so etwas, auf das der Server zugreift.

0:08:09.920,0:08:14.460
Das ist nicht Bestandteil des Servers, sondern
das ist eine externe Einheit, die irgendwo

0:08:14.460,0:08:16.360
im Rechenzentrum liegt.

0:08:16.360,0:08:28.830
Damit wäre das dann auch die Unterscheidung
hier.

0:08:28.830,0:08:39.120
Beim Tablet ist vielleicht interessant, ob
es einen SIM-Karten-Slot hat, deshalb könnte

0:08:39.120,0:08:46.819
man 'hatSimkartenslot' als Boolean angeben.

0:08:46.819,0:08:52.629
Also entweder es hat einen oder es hat keinen.

0:08:52.629,0:09:09.649
Der Laptop, da
habe ich hier angenommen, dass der keinen

0:09:09.649,0:09:10.649
SIM-Karten-Slot hat.

0:09:10.649,0:09:15.310
Wenn es natürlich der Fall wäre, dass der
Laptop einen SIM-Karten-Slot hat, dann wäre

0:09:15.310,0:09:17.439
das keine gute Eigenschaft.

0:09:17.439,0:09:25.910
Ich weiß nicht, ob es Laptops gibt, die vielleicht
so etwas haben, aber ich kenne das bei Tablets,

0:09:25.910,0:09:34.149
deshalb habe ich das jetzt dort oben eingeordnet
und denke nicht, dass das eine generelle Eigenschaft

0:09:34.149,0:09:36.800
von Clients ist.

0:09:36.800,0:09:47.610
Also ich denke, im Desktop-Bereich findet
man solche SIM-Karten-Slots nicht.

0:09:47.610,0:09:57.149
Bei dem Laptop, da wäre vielleicht die Anzahl
der Tasten interessant, weil der Laptop eben

0:09:57.149,0:09:59.379
eine integrierte Tastatur hat.

0:09:59.379,0:10:02.259
Das ist beim Tablet nicht der Fall.

0:10:02.259,0:10:10.259
Da werden meist Overlays als Tasten verwendet,
deshalb ist es eher eine virtuelle Tastatur,

0:10:10.259,0:10:22.100
somit ist die Anzahl der Tasten meistens eben
null, nicht vorhanden oder nicht so relevant

0:10:22.100,0:10:27.110
wie beim Laptop, bei welchem unterschiedliche
Sprach-Layouts eben auch unterschiedliche

0:10:27.110,0:10:28.990
Tasten haben.

0:10:28.990,0:10:38.999
Das ist eine prägende Eigenschaft für den
Laptop, bei dem es eben eine Tastatur gibt

0:10:38.999,0:10:42.670
und damit hätten wir für alles eine Eigenschaft.

0:10:42.670,0:10:46.809
Es gibt sicherlich noch eine Vielzahl weiterer
Eigenschaften, die man sich überlegen kann

0:10:46.809,0:10:48.259
für all diese Systeme.

0:10:48.259,0:10:57.269
Im Sinne der Aufgabe ist natürlich zu überlegen,
welche Eigenschaften einzigartig für die

0:10:57.269,0:10:59.300
jeweilige Klasse sind.

0:10:59.300,0:11:01.109
Vielen Dank.
