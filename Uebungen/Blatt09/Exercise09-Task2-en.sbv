0:00:01.439,0:00:07.649
In this task about the concurrency and conflicts
in Petri nets, we are given two Petri nets.

0:00:07.649,0:00:13.530
For the first subtask, we are supposed to
give all sets consisting of at least two transitions,

0:00:13.530,0:00:18.840
and all of those transitions need to be concurrently
activated for the initial marking.

0:00:18.840,0:00:24.800
So we take a look at our Petri nets, figure
out the initial marking, which for the first

0:00:24.800,0:00:30.429
one would be (1,1,1), because we have three
places with one token each.

0:00:30.429,0:00:36.160
For N2, this would be (1,1,0,0), because
we have four places and one token in s1 and

0:00:36.160,0:00:37.550
one token in s2.

0:00:37.550,0:00:40.050
So if we just write these down.

0:00:40.050,0:00:48.800
We have (1,1,1) over here, and we have
(1,1,0,0) over here.

0:00:48.800,0:00:56.140
Then we take all sets of two transitions and
figure out which of those are concurrently

0:00:56.140,0:00:57.170
activated.

0:00:57.170,0:01:00.440
We are supposed to do that like demonstrated
in the lecture slides.

0:01:00.440,0:01:06.259
So that basically means we first figure out
the preconditions for every transition.

0:01:06.259,0:01:20.100
So for N1, t1 expects
one token in s1 and one token in s2.

0:01:20.100,0:01:29.600
So this is (1,1,0).

0:01:29.600,0:01:39.509
For t2, the precondition expects one token
in s1 and nothing else.

0:01:39.509,0:01:43.530
So this is (1,0,0).

0:01:43.530,0:01:51.509
t3 expects two tokens in s2 and nothing
else.

0:01:51.509,0:01:57.049
So this is (0,2,0).

0:01:57.049,0:02:02.860
And t4 expects one token in s3 and nothing
else.

0:02:02.860,0:02:07.180
So this is (0,0,1).

0:02:07.180,0:02:14.230
Now, we can either just have a look at which
can be concurrently activated and then demonstrated

0:02:14.230,0:02:18.700
like in the lecture slides, by taking the
direct sum of these preconditions.

0:02:18.700,0:02:25.390
Or we can just work it out brute force and
take all possible pairs here and then take

0:02:25.390,0:02:26.390
the direct sum.

0:02:26.390,0:02:33.261
If the direct sum of these two pairs is less
than or equal than the initial marking, then

0:02:33.261,0:02:36.450
that means they're concurrently activated.

0:02:36.450,0:02:40.110
So that's how you could figure it out if you
don't have the Petri net, given that all,

0:02:40.110,0:02:43.630
and just have the preconditions for example.

0:02:43.630,0:02:47.610
But in this case, this is a pretty simple
one.

0:02:47.610,0:02:49.560
We don't have to write all of these down.

0:02:49.560,0:02:53.080
Let's just work it out step by step here.

0:02:53.080,0:02:56.330
So we take t1 and t2, we take the direct sum.

0:02:56.330,0:02:59.090
This would result in (2,1,0).

0:02:59.090,0:03:05.400
In this case, there's a two over here and
that's more than in s1 in the initial marking.

0:03:05.400,0:03:08.730
So the t1 and t2 are not concurrently activated.

0:03:08.730,0:03:13.090
t1 and t3, this would result in a three in s2.

0:03:13.090,0:03:18.450
That's also bigger than the initial marking
here.

0:03:18.450,0:03:21.670
So t1 and t3 are out as well.

0:03:21.670,0:03:28.510
Well, we see that pretty much immediately,
t1 and t4 are (1,1,0) and (0,0,1).

0:03:28.510,0:03:41.340
So the direct sum of

0:03:41.340,0:03:57.860
the preconditions of t1 and t4
are (1,1,1), which is less than or equal

0:03:57.860,0:04:03.470
to the initial marking, which is also
(1,1,1).

0:04:03.470,0:04:07.989
So this is how we would need to write it down.

0:04:07.989,0:04:14.379
That shows that t1 and t4 are concurrently
active.

0:04:14.379,0:04:19.460
Because we need to give the sets consisting
of at least two transitions that are concurrently

0:04:19.460,0:04:41.210
active, we say
the set of t1 and t4 is concurrently active.

0:04:41.210,0:04:43.919
Now we take a look at all the other ones.

0:04:43.919,0:04:49.520
t1, we already dealt with all the other combinations.

0:04:49.520,0:04:50.970
So we can move on with t2.

0:04:50.970,0:04:57.860
t2 and t3 would result in a 2 in the second
place, which is higher than the initial marking.

0:04:57.860,0:05:04.420
t2 and t4 would result in (1,0,1), which is
less than the initial marking.

0:05:04.420,0:05:06.449
So those are concurrently active as well.

0:05:06.449,0:05:14.229
So we write those down as well and say the
precondition of t2 direct sum with the precondition

0:05:14.229,0:05:28.070
of t4 results in (1,0,1), which is less than
or equal the initial marking.

0:05:28.070,0:05:45.960
So the set of t2 and t4 is concurrently active
as well.

0:05:45.960,0:05:55.260
We also need to consider t3 and t4.

0:05:55.260,0:06:00.630
So just for completeness sake, t3 and t4 would
result in (0,2,1), and that's higher than

0:06:00.630,0:06:01.800
the initial marking.

0:06:01.800,0:06:02.800
So that's out as well.

0:06:02.800,0:06:14.460
So we are left with t1 and t4 concurrently
active, and t2 and t4 concurrently active.

0:06:14.460,0:06:21.460
We can move onto the second Petri net and
repeat the same process there basically.

0:06:21.460,0:06:28.540
So if we, first of all, make some space here,
remove all of these, and now repeat the same

0:06:28.540,0:06:32.539
process for the second Petri net.

0:06:32.539,0:06:38.330
We, once again, take all the preconditions
for the transitions.

0:06:38.330,0:06:43.720
So the precondition for t1, it expects one
token in s1.

0:06:43.720,0:06:58.440
So the precondition for t1 in N2 is just one
token in s1 and nothing else.

0:06:58.440,0:07:03.940
So it's (1,0,0,0), because we have four places
here.

0:07:03.940,0:07:10.860
The precondition for t2 expects one token
in s2 and nothing else.

0:07:10.860,0:07:13.180
So (0,1,0,0).

0:07:13.180,0:07:21.020
The precondition for t3 expects one token
in s3.

0:07:21.020,0:07:29.889
So (0,0,1,0).

0:07:29.889,0:07:37.960
The precondition for t4 is two tokens in s4.

0:07:37.960,0:07:44.759
So (0,0,0,2).

0:07:44.759,0:07:50.460
t5 expects one token in s1.

0:07:50.460,0:08:00.740
Once again, we just take all the two pairs
of transitions we just worked through here,

0:08:00.740,0:08:07.729
take the direct sum, and look at if the direct
sum is bigger than or equal to the initial marking.

0:08:07.729,0:08:11.730
For t1 and t2, this results in (1,1,0,0),
which is perfect.

0:08:11.730,0:08:13.060
That’s our initial marking.

0:08:13.060,0:08:24.259
So we can immediately write down that the
direct

0:08:24.259,0:08:33.860
sum of the precondition of t1 and t2 results
in (1,1,0,0), which is less than or equal

0:08:33.860,0:08:36.990
to our initial marking (1,1,0,0).

0:08:36.990,0:08:48.260
So the set of t1 and t2 are concurrently active.

0:08:48.260,0:08:49.260
Moving on.

0:08:49.260,0:08:55.050
We have t1 and t3, this results in (1,0,1,0),
and the one over here in the third place

0:08:55.050,0:08:56.880
is not present in the initial marking.

0:08:56.880,0:08:57.880
So that's out.

0:08:57.880,0:09:03.570
t1 and t4 results in a two over here, and
there are no markings in the fourth place.

0:09:03.570,0:09:04.570
So that's out as well.

0:09:04.570,0:09:12.360
t1 and t5 results in (2,0,0,0), which is
one higher than these tokens present in s1

0:09:12.360,0:09:13.360
initial marking.

0:09:13.360,0:09:18.750
So that's it for t1, it's just t1 and t2.

0:09:18.750,0:09:21.890
Next we look at t2 and t3.

0:09:21.890,0:09:24.520
This results in (0,1,1,0).

0:09:24.520,0:09:26.640
There's no marking in s3 in the initial marking.

0:09:26.640,0:09:28.190
So that's out.

0:09:28.190,0:09:30.340
The same for t4.

0:09:30.340,0:09:31.890
There's no markings in s4.

0:09:31.890,0:09:32.890
So that's out.

0:09:32.890,0:09:34.840
t2 and t4 is out as well.

0:09:34.840,0:09:40.579
But t2 and t5 result in (1,1,0,0), which
is exactly our initial marking.

0:09:40.579,0:09:42.670
So those are concurrent as well.

0:09:42.670,0:09:53.990
So it's again the direct sum of the precondition
for t2 and the precondition for t5 result

0:09:53.990,0:10:04.899
in (1,1,0,0), which is less than or equal
to our initial marking.

0:10:04.899,0:10:19.149
So the set of t2 and t5 are concurrently active.

0:10:19.149,0:10:20.350
That's it for t2.

0:10:20.350,0:10:24.010
So t3, there’s no markings at all in s3
in the initial markings.

0:10:24.010,0:10:29.529
So we can skip all of that because all direct
sums are still going to have a marking in

0:10:29.529,0:10:34.579
s3, and that's not possible with our initial
marking.

0:10:34.579,0:10:42.820
The same goes for t4 because there's some
tokens in s4 and none in our initial marking

0:10:42.820,0:10:46.290
there.

0:10:46.290,0:10:50.910
But we've already considered everything for
t5 by looking at the other ones first.

0:10:50.910,0:10:57.240
There's no T6 or something we can pair with
t5 that we haven't already looked at.

0:10:57.240,0:11:03.610
So we can skip t5 as well and we are left
with just these two concurrently active sets

0:11:03.610,0:11:12.720
of t1 and t2, and t2 and t5 for our Petri
net N2.

0:11:12.720,0:11:18.140
Since we do not need to prove that there are
no other concurrencies, this is it for the

0:11:18.140,0:11:22.079
first subtask.

0:11:22.079,0:11:28.269
With that, we can move on to subtask two,
B, which is to give all pairs of transitions

0:11:28.269,0:11:32.220
which are in conflict in the initial marking.

0:11:32.220,0:11:39.070
To figure out if they're in conflict, we first
need to determine once again by their preconditions,

0:11:39.070,0:11:42.730
whether the transition is even active in the
initial marking.

0:11:42.730,0:11:48.160
That's the case if the precondition is less
than or equal to the initial marking.

0:11:48.160,0:12:02.150
So for t1, we have the precondition of one
token in s1 and one token in s2.

0:12:02.150,0:12:08.389
So (1,1,0), and that is less than or equal
to M0.

0:12:08.389,0:12:11.980
So t1 is active in the initial marking.

0:12:11.980,0:12:18.610
The initial marking for the precondition for
t2 is also active because that's just one

0:12:18.610,0:12:20.760
token in s1 expected.

0:12:20.760,0:12:24.519
So it's (1,0,0).

0:12:24.519,0:12:30.850
So that's also less than or equal to our initial
marking, and therefore active.

0:12:30.850,0:12:35.790
t3 is not active because that expects two
tokens in s2.

0:12:35.790,0:12:38.730
So we are not going to write that down.

0:12:38.730,0:12:46.110
t4 is active because there's one token in
s3 expected, which is the initial marking.

0:12:46.110,0:12:56.180
So we can write that down as well as precondition
(0,0,1), and that is less than or equal to

0:12:56.180,0:12:58.380
the initial marking.

0:12:58.380,0:13:08.949
Now we can look back at our results from the
first subtask, which was that t1 and t4 are

0:13:08.949,0:13:09.949
concurrently active.

0:13:09.949,0:13:13.240
That means they can't also be in conflict.

0:13:13.240,0:13:19.470
So we take out that pair basically and ignore
the pair of t1 and t4.

0:13:19.470,0:13:23.570
So we take a look at t1 and t2 now.

0:13:23.570,0:13:27.850
To show that they're in conflict, we need
to, we've already shown that they're active,

0:13:27.850,0:13:34.230
and now we need to show that the direct sum
of these two are not less than or equal to

0:13:34.230,0:13:35.230
the initial marking.

0:13:35.230,0:13:40.430
So basically if we were doing this step by
step, just doing this brute force, basically

0:13:40.430,0:13:47.699
we would show for every pair that the pair
is active, so less than or equal to M0, but

0:13:47.699,0:13:50.829
the direct sum is not less than or equal to
M0.

0:13:50.829,0:13:55.670
That means that there is a conflict between
these two.

0:13:55.670,0:14:16.399
For t1 and t2, the direct sum of the preconditions
would be (2,1,0), which is not less than or

0:14:16.399,0:14:19.139
equal to our initial marking.

0:14:19.139,0:14:24.120
Therefore there is a conflict between t1 and
t2.

0:14:24.120,0:14:32.480
So t1 and t2 are in conflict in the initial
marking.

0:14:32.480,0:14:44.820
t2 and t4 are not in conflict because the
direct sum of those is just (1,0,1), and that's

0:14:44.820,0:14:46.259
also less than or equal to M0.

0:14:46.259,0:14:48.860
So these are not in conflict.

0:14:48.860,0:14:54.330
We've also shown this in the first subtask
because t2 and t4 are also concurrently active.

0:14:54.330,0:14:59.779
And if two transitions are concurrently active,
they can't also be in conflict.

0:14:59.779,0:15:02.769
So that rules them out for this.

0:15:02.769,0:15:10.399
So we only have t1 and t2 in conflict for
the first Petri net.

0:15:10.399,0:15:15.310
Now for Petri net N2, we would basically repeat
the same process.

0:15:15.310,0:15:18.740
We first figure out which ones are active.

0:15:18.740,0:15:25.160
Just looking at the Petri net, we can already
tell only t1, t2, and t5 are active, because

0:15:25.160,0:15:32.810
t2 expects a token in s2, t1 expects a token
in s1, and t5 also expects a token in s1,

0:15:32.810,0:15:33.810
there's no other token.

0:15:33.810,0:15:39.140
So t3 can't be active and t4 can't be active
either.

0:15:39.140,0:15:47.470
Then we already know from our first subtask
that t1 and t2 are concurrently active.

0:15:47.470,0:15:49.759
So t1 and t2 can't be in conflict.

0:15:49.759,0:15:55.940
t5 and t2 are concurrently active, so those
can't be in conflict as well.

0:15:55.940,0:15:59.279
So the only pair that's left is t1 and t5.

0:15:59.279,0:16:12.850
If we look at the precondition of t1, which
is just one token in s1 and nothing else,

0:16:12.850,0:16:14.889
that's less than or equal to M0.

0:16:14.889,0:16:15.980
So this is active.

0:16:15.980,0:16:19.819
This is just writing this down once again
to prove it, because that's what the task

0:16:19.819,0:16:22.420
is asking for.

0:16:22.420,0:16:30.670
The precondition for t5 is exactly the same,
also less than or equal to M0, and therefore

0:16:30.670,0:16:31.670
active.

0:16:31.670,0:16:43.319
But the direct sum

0:16:43.319,0:16:55.720
of the two preconditions is (2,0,0,0), which
is not less than or equal to M0.

0:16:55.720,0:17:10.190
Therefore, the pair t1 and t5 are in conflict
in the initial marking in M0.

0:17:10.190,0:17:14.829
There's nothing else to consider.

0:17:14.829,0:17:19.709
So this is it for the second Petri net, and
that's it for this task.
