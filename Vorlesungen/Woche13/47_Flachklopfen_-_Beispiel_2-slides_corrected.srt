267 # slide
00:00:01,740 --> 00:00:02,910
Next example:

00:00:02,910 --> 00:00:09,750
Again a UML state diagram, which we
are to transform into a flat state diagram.

00:00:09,750 --> 00:00:17,250
This time no hierarchical
state, but a region state.

00:00:18,060 --> 00:00:22,980
Characteristics of this example would be that
there are regions, but still no history.

00:00:25,890 --> 00:00:28,410
And there is a final state.

00:00:28,410 --> 00:00:35,820
We will only ever have that on the outside,
if at all (in this kind of state diagram,

00:00:35,820 --> 00:00:38,580
which is what we
want to use for flat-knocking).

00:00:41,970 --> 00:00:44,160
Now what would be the approach here?

00:00:44,160 --> 00:00:51,570
Well, first of all, outside the region
we just proceed as before, that is,

00:00:51,570 --> 00:00:55,500
as it was in Example 1 as a recipe.

00:00:55,500 --> 00:00:58,440
So keep simple states.

00:00:58,440 --> 00:01:06,180
Translate entries and exits at
the edge of hierarchical states appropriately.

00:01:06,180 --> 00:01:09,210
This will later
also affect region entries/exits.

00:01:09,210 --> 00:01:17,460
Keep transitions between outer states
also simple and keep only the

00:01:17,460 --> 00:01:20,220
outermost start state as such.

00:01:21,420 --> 00:01:23,370
Outside regions we will
do exactly the same.

00:01:23,370 --> 00:01:29,310
For now, we'll ignore this part
here, and decide what to do outside.

00:01:29,310 --> 00:01:35,160
Here we will keep A and G, and
that A is (and will remain) the start state.

00:01:41,610 --> 00:01:43,560
What happens to the regions?

00:01:45,840 --> 00:01:50,130
We actually want, with such a
parallel representation of regions, that always

00:01:50,130 --> 00:01:53,640
at the same time a state from
one region and a state from the

00:01:53,640 --> 00:01:58,410
other region are active, when we are
in this part of the state diagram.

00:01:58,410 --> 00:02:03,900
That is, with these three states and these
two states, we now have to form pairs.

00:02:03,900 --> 00:02:07,110
This means the cross
product between the states.

00:02:07,110 --> 00:02:13,650
Let there be a BE state, a CE,
a DE, a BF, a CF, a DF.

00:02:13,650 --> 00:02:18,120
So just the cross product between the
sets of the substates of those two regions.

00:02:21,480 --> 00:02:24,900
So that will explain
how we proceed in here.

00:02:24,900 --> 00:02:29,010
Then, of course, there
have to be appropriate transitions.

00:02:29,010 --> 00:02:36,660
For example, if we're in the BE
state and a b is triggered, that

00:02:36,660 --> 00:02:40,320
will lead to the new CE state.

00:02:40,320 --> 00:02:48,780
Just this parallel processing, how in that case
the E just doesn't change, but B becomes C.

00:02:48,780 --> 00:02:54,180
This must be reflected in the transition
between corresponding states of the cross product.

00:02:54,180 --> 00:02:59,430
Or if we would have a b below here, then it
would have to be so that with the b from the

00:02:59,430 --> 00:03:05,190
state BE to CF is transferred,
because of this parallelism, which is present.

00:03:05,190 --> 00:03:11,370
We're sort of translating the behavior,
in these two parallel regions, into

00:03:11,370 --> 00:03:15,570
transitions between the
cross product states.

00:03:17,760 --> 00:03:20,980
That explains how we deal
with the part in here,

00:03:20,980 --> 00:03:25,690
making parallelism explicit, at the
level of the cross product states.

00:03:25,690 --> 00:03:28,330
Then we have to deal with the edge again.

00:03:28,330 --> 00:03:30,910
What happens when we enter
or leave a region state.

00:03:31,780 --> 00:03:39,010
For this, we will
basically just translate again

00:03:39,010 --> 00:03:40,810
what then these entries and exits mean.

00:03:40,810 --> 00:03:47,140
According to the introduced
meaning of these different

00:03:47,140 --> 00:03:49,750
ways of entering and leaving states.

00:03:49,750 --> 00:03:53,050
What we had already
done so far, on artificial

00:03:53,050 --> 00:03:55,889
examples, we can use just
here for the flat knocking.

00:03:55,889 --> 00:04:03,910
Let's make it concrete for this example.

00:04:06,070 --> 00:04:09,880
Outside the region, we proceed
as before, so we keep things.

00:04:09,880 --> 00:04:14,320
This now leads to this constellation.

00:04:14,320 --> 00:04:19,480
Because there is hardly anything outside the region state,
we can only keep the A and the G,

00:04:19,480 --> 00:04:21,670
with the respective marking
as start and end state.

00:04:23,830 --> 00:04:26,680
Then this would be
what happens outside the region.

00:04:26,680 --> 00:04:31,420
Then, of course, what is more
exciting is what happens inside the region.

00:04:31,420 --> 00:04:36,520
And there the first, most important step is this
cross product of the sets of states of the regions.

00:04:37,300 --> 00:04:43,720
Because we have these two regions here, with
the 2- and 3-element set respectively, and we're

00:04:43,720 --> 00:04:48,640
supposed to form the cross product
between them, we now get six states.

00:04:48,640 --> 00:04:56,320
Namely all pairs: once B, C, D paired
with E, once B, C, D paired with F.

00:04:56,320 --> 00:05:01,660
That results as state set
first of all from this part.

00:05:01,660 --> 00:05:06,160
Here, of course, there must
be some transitions in between.

00:05:06,160 --> 00:05:09,565
And these are simply the
ones that result from the regions.

00:05:09,565 --> 00:05:15,910
If the b and c changes between B,
C, D, while the state from the other

00:05:15,910 --> 00:05:21,940
region remains unchanged (because there are
no b or c transitions there), it

00:05:22,610 --> 00:05:29,990
leads to the fact that we can
progress here independently of the second component.

00:05:29,990 --> 00:05:37,880
On the other hand, in the other region
there is this e-transition, from E to F, where

00:05:37,880 --> 00:05:41,930
B, C, D are not affected in the
other region because there is no e-transition there.

00:05:41,930 --> 00:05:46,160
This then leads to the fact
that there are still these transitions.

00:05:46,160 --> 00:05:49,760
Here always that must be
done, which results from the regions.

00:05:49,760 --> 00:05:51,560
If necessary also by parallel

00:05:51,560 --> 00:05:54,830
executions, if actually times a
trigger occurs in both regions.

00:05:54,830 --> 00:05:55,970
Then it can also come to other arrows.

00:05:55,970 --> 00:06:02,120
But in the concrete case here, this
picture results within the cross product set.

00:06:02,120 --> 00:06:09,530
So we did that
outside the region as before.

00:06:09,530 --> 00:06:12,665
In addition, the cross product
between the regions was formed.

00:06:12,665 --> 00:06:18,230
Within the regions
corresponding transitions suitably translated.

00:06:18,230 --> 00:06:21,680
Then it's still a matter of
the entries and exits at the edge.

00:06:24,860 --> 00:06:37,181
Now, we have here these a, h, and
g transitions that enter or leave the region state.

00:06:37,181 --> 00:06:40,370
We still have to give
translations for each of those.

00:06:43,220 --> 00:06:44,900
The a transition is very easy.

00:06:44,900 --> 00:06:53,150
This was here a transition into
the region state by standard entry.

00:06:53,150 --> 00:06:56,120
Then we know: we just choose
the starting state in each region.

00:06:57,170 --> 00:07:03,035
So this transition from A through
a must lead to the pair BE.

00:07:03,035 --> 00:07:04,490
That's exactly what happens here.

00:07:04,490 --> 00:07:08,600
So that explains this translation.

00:07:08,600 --> 00:07:11,540
What about the g?

00:07:11,540 --> 00:07:18,020
What did that look like
in the original UML state diagram?

00:07:18,020 --> 00:07:24,920
That was leaving regions from
two very specific sub-states, namely

00:07:24,920 --> 00:07:27,350
D in the first region
and F in the second.

00:07:27,950 --> 00:07:30,740
That means, again, in translating to
this cross product, we then have

00:07:30,740 --> 00:07:36,980
to have a transition with g from
the pair DF to the outer state G.

00:07:36,980 --> 00:07:40,880
So that explains why
this transition starts right here

00:07:40,880 --> 00:07:45,740
and not in any of the
other states from the cross product.

00:07:47,180 --> 00:07:52,880
And then we're still
missing the translation of

00:07:52,880 --> 00:07:58,160
how this h transition plays
out in the cross product.

00:07:58,160 --> 00:08:05,210
That is a transition that explicitly leaves
only one state of the two regions, C.

00:08:05,210 --> 00:08:11,660
This means that we are allowed to
leave this region state whenever C is present

00:08:11,660 --> 00:08:16,160
in the first region (while it does not
matter what is present in the second region).

00:08:16,160 --> 00:08:21,710
We are allowed to take this transition
whenever we are in state CE or CF.

00:08:21,710 --> 00:08:25,394
This is what happens right here.

00:08:25,394 --> 00:08:31,130
The h is allowed to act
and lead to G to the outside

00:08:31,130 --> 00:08:36,260
exactly when there is C in the first region (and
it does not matter what is in the second region).

00:08:41,000 --> 00:08:43,100
This would also solve this example.

00:08:43,100 --> 00:08:49,880
So to this UML state
diagram belongs this flat state diagram.

00:08:50,630 --> 00:08:53,660
The main idea is just to form

00:08:53,660 --> 00:08:57,140
the cross product and then
of course to enter suitable transitions.
